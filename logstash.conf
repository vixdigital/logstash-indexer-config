input {
        stdin {}

        tcp {
                port => 5000
                codec => json
        }

        udp {
                port => 5000
                tags => ["rancher"]
                codec => json
        }

        http {
                port => "8080"
                host => "0.0.0.0"
                user => "logstashUser"
                password => "LogstashAllTheThing$"
                tags => ["mousemove"]
                codec => json
        }
}


filter {
        if "content-platform" in [docker][image] {
                grok {
                        match => {"message" => "\[pid: %{NUMBER:pid}\|app: %{NUMBER:id}\|req: %{NUMBER:currentReq}/%{NUMBER:totalReq}\] %{IP:remoteAddr} \(%{WORD:remoteUser}?\) \{%{NUMBER:CGIVar} vars in %{NUMBER:CGISize} bytes\} %{SYSLOG5424SD:timestamp} %{WORD:method} %{URIPATHPARAM:uri} \=\> generated %{NUMBER:resSize} bytes in %{NUMBER:resTime} msecs \(HTTP/%{NUMBER:httpVer} %{NUMBER:status}\) %{NUMBER:headers} headers in %{NUMBER:headersSize} bytes %{GREEDYDATA:coreInfo}"}
                }
                date {
                        match => [ "timestamp" , "dd/MMM/yyyy:HH:mm:ss Z" ]
                }
        }  else if "lb-service-haproxy" in [docker][image] {
                grok {
                        match => ["message", "%{HAPROXYHTTP}"]
                }
        } else if "mousemove" in [tags]{


        }

}

output {
        if "mousemove" in [tags] {
                elasticsearch {
                        hosts => ["https://vpc-esdomain-xjx622kx47t3xskcn5fazmz2ze.eu-west-1.es.amazonaws.com:443"]
                        index => "mouse-%{+YYYY.MM.dd}"

                }

        }
        else {
                elasticsearch { hosts => ["https://vpc-esdomain-xjx622kx47t3xskcn5fazmz2ze.eu-west-1.es.amazonaws.com:443"] }
        }

        stdout { codec => rubydebug }


}
